{"version":3,"sources":["../../../projects/ng9-pagination/src/lib/ng9-pagination.service.ts","../../../projects/ng9-pagination/src/lib/ng9-pagination.component.ts","../../../projects/ng9-pagination/src/lib/page-controls/page-controls.component.ts","../../../projects/ng9-pagination/src/lib/pipe-pagination.pipe.ts","../../../projects/ng9-pagination/src/lib/ng9-pagination.module.ts"],"names":["Injectable","args","providedIn","Ng9PaginationComponent","prototype","ngOnInit","Component","selector","template","PageControlsComponent","this","pageChange","EventEmitter","totalPages","Math","round","arrayLength","itemsPerPage","onNext","pageKey","emit","prevPage","enablePrev","enableNext","Input","Output","PipePaginationPipe","transform","value","console","log","startIndex","endIndex","length","PageKey","filter","item","index","Pipe","name","NgModule","declarations","imports","exports"],"mappings":"2RAOE,4HALDA,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kECWZ,SAAAC,YAEAA,EAAAC,UAAAC,SAAA,sCAdDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,qBACVC,SAAU,kHCWV,SAAAC,IAJUC,KAAAC,WAA+B,IAAIC,EAAAA,aAE7CF,KAAAG,WAAiB,SAIjBJ,EAAAL,UAAAC,SAAA,WACCK,KAAKG,WAAYC,KAAKC,MAAML,KAAKM,YAAYN,KAAKO,eAGnDR,EAAAL,UAAAc,OAAA,WACKR,KAAKS,QAAUT,KAAKG,aAClBH,KAAKS,UAAaT,KAAKG,WAI1BH,KAAKC,WAAWS,KAAKV,KAAKS,aAI9BV,EAAAL,UAAAiB,SAAA,WACMX,KAAKS,QAAQ,EAAK,GACpBT,KAAKC,WAAWS,KAAKV,KAAKS,QAAU,IAGxCV,EAAAL,UAAAkB,WAAA,WACE,OAAmB,GAAhBZ,KAAKS,SAMVV,EAAAL,UAAAmB,WAAA,WACE,OAAGb,KAAKS,SAAWT,KAAKG,qCA1C3BP,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,mBACVC,SAAA,ooDAICgB,EAAAA,2BACAA,EAAAA,4BACAA,EAAAA,0BACAC,EAAAA,2BCDH,SAAAC,YAEEA,EAAAtB,UAAAuB,UAAA,SAAUC,EAAkB3B,GAC1B4B,QAAQC,IAAI7B,GACZ,IAAI8B,EAAmB,EACnBC,EAAiB,EACrB,OAAGJ,EAAMK,OAAShC,EAAKgB,cAEnBc,EADiB,GAAhB9B,EAAKiC,SACSjC,EAAKiC,QAAQ,GAAKjC,EAAKgB,aAE5BhB,EAAKiC,QAAUjC,EAAKgB,aAElCe,EAAaD,GAAc9B,EAAKgB,aAAe,GACxCW,EAAMO,QAAO,SAACC,EAAKC,GACxB,OAAQA,GAAUN,GAAkBM,GAAUL,MAGzCJ,4BApBVU,EAAAA,KAAIrC,KAAA,CAAC,CACJsC,KAAM,2BCOR,iCARCC,EAAAA,SAAQvC,KAAA,CAAC,CACRwC,aAAc,CAACtC,EACbM,EAAsBiB,GACxBgB,QAAS,GAETC,QAAS,CAACxC,EACRM,EAAsBiB","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Ng9PaginationService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ng9-pagination',\n  template: `\n    <p>\n      ng9-pagination works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class Ng9PaginationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ng9-pageControls',\n  templateUrl: './page-controls.component.html',\n  styleUrls: ['./page-controls.component.scss']\n})\nexport class PageControlsComponent implements OnInit {\n  @Input() pageKey : any ; \n  @Input() arrayLength  : any ;\n  @Input() itemsPerPage : any ;\n  @Output() pageChange:EventEmitter<any> = new EventEmitter() ;\n\n  totalPages : any=0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n   this.totalPages= Math.round(this.arrayLength/this.itemsPerPage);\n\n  }\n  onNext(){\n    if(this.pageKey < this.totalPages ){\n     if( this.pageKey++ == this.totalPages){\n       //disableNextBUtton\n     }\n     \n      this.pageChange.emit(this.pageKey++)\n    }\n  }\n  \n  prevPage(){\n    if((this.pageKey-1) > 0){\n      this.pageChange.emit(this.pageKey - 1);\n    }\n  }\n  enablePrev(){\n    if(this.pageKey == 1){\n      return true;\n\n    }\n    return false;\n  }\n  enableNext(){\n    if(this.pageKey == this.totalPages){\n      return true;\n\n    }\n    return false;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nexport interface opt  { \n  itemsPerPage : any,\n  PageKey : any,\n}\n\n@Pipe({\n  name: 'pipePagination'\n})\nexport class PipePaginationPipe implements PipeTransform {\n\n  transform(value:Array<any>, args : opt) {\n    console.log(args) \n    let startIndex : any = 0 ;\n    let endIndex : any = 0 ;\n    if(value.length > args.itemsPerPage){\n      if(args.PageKey != 0 ){\n        startIndex =  (args.PageKey-1) * args.itemsPerPage ;\n      }else{\n    startIndex =  args.PageKey * args.itemsPerPage ;\n  }\n    endIndex =  (startIndex + (args.itemsPerPage - 1)) ; \n    return value.filter((item,index)=> {\n      return((index >=  startIndex)  &&  (index <=  endIndex))\n    });\n  }else {\n    return value;\n  }\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Ng9PaginationComponent } from './ng9-pagination.component';\nimport { PageControlsComponent } from './page-controls/page-controls.component';\nimport { PipePaginationPipe } from './pipe-pagination.pipe';\n\n\n\n@NgModule({\n  declarations: [Ng9PaginationComponent,\n    PageControlsComponent,PipePaginationPipe],\n  imports: [\n  ],\n  exports: [Ng9PaginationComponent,\n    PageControlsComponent,PipePaginationPipe]\n})\nexport class Ng9PaginationModule { }\n"]}