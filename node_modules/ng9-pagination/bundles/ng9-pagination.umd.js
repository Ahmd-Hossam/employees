(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ng9-pagination', ['exports', '@angular/core'], factory) :
    (global = global || self, factory(global['ng9-pagination'] = {}, global.ng.core));
}(this, (function (exports, i0) { 'use strict';

    var Ng9PaginationService = /** @class */ (function () {
        function Ng9PaginationService() {
        }
        return Ng9PaginationService;
    }());
    Ng9PaginationService.ɵprov = i0.ɵɵdefineInjectable({ factory: function Ng9PaginationService_Factory() { return new Ng9PaginationService(); }, token: Ng9PaginationService, providedIn: "root" });
    Ng9PaginationService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    Ng9PaginationService.ctorParameters = function () { return []; };

    var Ng9PaginationComponent = /** @class */ (function () {
        function Ng9PaginationComponent() {
        }
        Ng9PaginationComponent.prototype.ngOnInit = function () {
        };
        return Ng9PaginationComponent;
    }());
    Ng9PaginationComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'lib-ng9-pagination',
                    template: "\n    <p>\n      ng9-pagination works!\n    </p>\n  "
                },] }
    ];
    Ng9PaginationComponent.ctorParameters = function () { return []; };

    var PageControlsComponent = /** @class */ (function () {
        function PageControlsComponent() {
            this.pageChange = new i0.EventEmitter();
            this.totalPages = 0;
        }
        PageControlsComponent.prototype.ngOnInit = function () {
            this.totalPages = Math.round(this.arrayLength / this.itemsPerPage);
        };
        PageControlsComponent.prototype.onNext = function () {
            if (this.pageKey < this.totalPages) {
                if (this.pageKey++ == this.totalPages) {
                    //disableNextBUtton
                }
                this.pageChange.emit(this.pageKey++);
            }
        };
        PageControlsComponent.prototype.prevPage = function () {
            if ((this.pageKey - 1) > 0) {
                this.pageChange.emit(this.pageKey - 1);
            }
        };
        PageControlsComponent.prototype.enablePrev = function () {
            if (this.pageKey == 1) {
                return true;
            }
            return false;
        };
        PageControlsComponent.prototype.enableNext = function () {
            if (this.pageKey == this.totalPages) {
                return true;
            }
            return false;
        };
        return PageControlsComponent;
    }());
    PageControlsComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'ng9-pageControls',
                    template: "\n<button [disabled]=\"enablePrev()\"   class=\"pbtn pagination-primary \" (click)=\"prevPage()\" > < </button> \n\n<button class=\" pbtn pagination-light\" > \n    {{pageKey}} of {{totalPages}} </button> \n<button [disabled]=\"enableNext()\"  class=\"pbtn pagination-primary\" (click)=\"onNext()\" >  > </button>",
                    styles: [".cursorDisable{background-color:0!important;cursor:not-allowed!important}.pagination-primary{background-color:#007bff!important;border-color:#007bff!important;color:#fff!important}.pagination-primary:active,.pagination-primary:hover{background-color:#0062cc!important;border-color:#005cbf!important;color:#fff}.pagination-primary:focus{background-color:#0069d9!important;border-color:#0062cc!important;box-shadow:0 0 0 .2rem rgba(38,143,255,.5);color:#fff!important}.pbtn{-moz-user-select:none;-webkit-user-select:none;background-color:initial;border:1px solid transparent;border-radius:.25rem;color:#212529;display:inline-block;font-size:1rem;font-weight:400;line-height:1.5;padding:.375rem .75rem;text-align:center;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;user-select:none;vertical-align:middle}.pbtn:focus{outline:0}.pagination-light{background-color:#f8f9fa;border-color:#f8f9fa;color:#212529}.pagination-light:focus{background-color:#e2e6ea;border-color:#dae0e5;box-shadow:0 0 0 .2rem rgba(216,217,219,.5);color:#212529}.pagination-light:active{background-color:#dae0e5;border-color:#d3d9df;color:#212529}.pagination-light:hover{background-color:#e2e6ea;border-color:#dae0e5;color:#212529}"]
                },] }
    ];
    PageControlsComponent.ctorParameters = function () { return []; };
    PageControlsComponent.propDecorators = {
        pageKey: [{ type: i0.Input }],
        arrayLength: [{ type: i0.Input }],
        itemsPerPage: [{ type: i0.Input }],
        pageChange: [{ type: i0.Output }]
    };

    var PipePaginationPipe = /** @class */ (function () {
        function PipePaginationPipe() {
        }
        PipePaginationPipe.prototype.transform = function (value, args) {
            console.log(args);
            var startIndex = 0;
            var endIndex = 0;
            if (value.length > args.itemsPerPage) {
                if (args.PageKey != 0) {
                    startIndex = (args.PageKey - 1) * args.itemsPerPage;
                }
                else {
                    startIndex = args.PageKey * args.itemsPerPage;
                }
                endIndex = (startIndex + (args.itemsPerPage - 1));
                return value.filter(function (item, index) {
                    return ((index >= startIndex) && (index <= endIndex));
                });
            }
            else {
                return value;
            }
        };
        return PipePaginationPipe;
    }());
    PipePaginationPipe.decorators = [
        { type: i0.Pipe, args: [{
                    name: 'pipePagination'
                },] }
    ];

    var Ng9PaginationModule = /** @class */ (function () {
        function Ng9PaginationModule() {
        }
        return Ng9PaginationModule;
    }());
    Ng9PaginationModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [Ng9PaginationComponent,
                        PageControlsComponent, PipePaginationPipe],
                    imports: [],
                    exports: [Ng9PaginationComponent,
                        PageControlsComponent, PipePaginationPipe]
                },] }
    ];

    /*
     * Public API Surface of ng9-pagination
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.Ng9PaginationComponent = Ng9PaginationComponent;
    exports.Ng9PaginationModule = Ng9PaginationModule;
    exports.Ng9PaginationService = Ng9PaginationService;
    exports.PageControlsComponent = PageControlsComponent;
    exports.PipePaginationPipe = PipePaginationPipe;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng9-pagination.umd.js.map
